{"ast":null,"code":"import _slicedToArray from \"/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/Form/searchForm\";\nimport SearchResult from \"../components/Search/searchResult\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\"; // import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1]; // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res => \n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n  // // Handles updating component state when the user types into the input field\n  //  handleInputChange=(event)=>{\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    API.googlebooks(search).then(function (res) {\n      console.log(\"res\", res.data.items);\n      var results = res.data.items;\n      results = results.map(function (result) {\n        console.log(result.volumeInfo);\n        console.log(result.volumeInfo.imageLinks.thumbnail);\n        result = {\n          key: result.id,\n          id: result.id,\n          title: result.volumeInfo.title,\n          author: result.volumeInfo.authors,\n          description: result.volumeInfo.description,\n          link: result.volumeInfo.infoLink\n        };\n        return result;\n      });\n      setBooks(results);\n      console.log(\"books\", books);\n    });\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log(name, value);\n    setSearch(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Find Your Favorite Books with GoogleBook API\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchResult, {\n    books: books,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","SearchForm","SearchResult","API","Link","Col","Row","Container","Books","books","setBooks","formObject","setFormObject","search","setSearch","handleFormSubmit","event","preventDefault","googlebooks","then","res","console","log","data","items","results","map","result","volumeInfo","imageLinks","thumbnail","key","id","title","author","authors","description","link","infoLink","handleInputChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/Form/searchForm\"\nimport SearchResult from \"../components/Search/searchResult\"\n\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\nconst [search,setSearch] = useState(\"\")\n  // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res => \n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n\n  // // Handles updating component state when the user types into the input field\n  //  handleInputChange=(event)=>{\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  const handleFormSubmit = (event)=>{\n    event.preventDefault();\n    API.googlebooks(search)\n    .then((res)=>{\n    console.log(\"res\",res.data.items);\n    let results = res.data.items \n    results = results.map(result=>{\n      console.log(result.volumeInfo)\n      console.log(result.volumeInfo.imageLinks.thumbnail)\n      result = {\n        key: result.id,\n        id: result.id,\n        title: result.volumeInfo.title,\n        author: result.volumeInfo.authors,\n        description: result.volumeInfo.description,\n        link: result.volumeInfo.infoLink\n     }\n     return result\n    })\n    setBooks(results)\n    console.log(\"books\",books)\n    })\n   \n  }\n\n const handleInputChange = event => {\n        // Destructure the name and value properties off of event.target\n        // Update the appropriate state\n        const { name, value } = event.target;\n        console.log(name,value)\n        setSearch(value)\n    };\n\n    return (\n      <Container fluid>\n        <Jumbotron>\n                    <h1 className=\"text-black\">Find Your Favorite Books with GoogleBook API</h1>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col size=\"12\">\n                            <SearchForm\n                                handleFormSubmit={handleFormSubmit}\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <br></br>\n                <Container>\n                    <SearchResult books={books} />\n                </Container>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}