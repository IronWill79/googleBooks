{"ast":null,"code":"import _slicedToArray from \"/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/Form/searchForm\";\nimport SearchResult from \"../components/Search/searchResult\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\"; // import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1]; // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res =>\n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n  // // Handles updating component state when the user types into the input field\n  //  handleInputChange=(event)=>{\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    API.googlebooks(search).then(function (res) {\n      var results = res.data.items;\n      results = results.map(function (result) {\n        var _result$volumeInfo$im;\n\n        // console.log(result.volumeInfo.imageLinks.thumbnail ? true : false);\n        result = {\n          key: result.id,\n          id: result.id,\n          title: result.volumeInfo.title,\n          author: result.volumeInfo.authors,\n          description: result.volumeInfo.description,\n          link: result.volumeInfo.infoLink,\n          image: (_result$volumeInfo$im = result.volumeInfo.imageLinks) === null || _result$volumeInfo$im === void 0 ? void 0 : _result$volumeInfo$im.thumbnail\n        };\n        return result;\n      });\n      setBooks(results);\n    });\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setSearch(value);\n  };\n\n  var handleSave = function handleSave(event) {\n    event.preventDefault();\n    var save = books.filter(function (book) {\n      return book.id === event.target.id;\n    });\n    console.log(save);\n    var data = {\n      title: save[0].title,\n      author: \"save[0].author\",\n      description: save[0].description,\n      image: save[0].image\n    };\n    console.log(data);\n    API.saveBook(data).then(function (res) {\n      alert(\"book saved\");\n      console.log(res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Find Your Favorite Books with GoogleBook API\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    handleFormSubmit: handleFormSubmit,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchResult, {\n    books: books,\n    handleSave: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/rashawndoyley/Desktop/HomeWork/googlebooks/develop/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","SearchForm","SearchResult","API","Link","Col","Row","Container","Books","books","setBooks","formObject","setFormObject","search","setSearch","handleFormSubmit","event","preventDefault","googlebooks","then","res","results","data","items","map","result","key","id","title","volumeInfo","author","authors","description","link","infoLink","image","imageLinks","thumbnail","handleInputChange","target","name","value","handleSave","save","filter","book","console","log","saveBook","alert","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport SearchForm from \"../components/Form/searchForm\";\nimport SearchResult from \"../components/Search/searchResult\";\n\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({});\n  const [search, setSearch] = useState(\"\");\n  // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res =>\n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n\n  // // Handles updating component state when the user types into the input field\n  //  handleInputChange=(event)=>{\n  //   const { name, value } = event.target;\n  //   setFormObject({...formObject, [name]: value})\n  // };\n\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.googlebooks(search).then((res) => {\n      let results = res.data.items;\n      results = results.map((result) => {\n        // console.log(result.volumeInfo.imageLinks.thumbnail ? true : false);\n        result = {\n          key: result.id,\n          id: result.id,\n          title: result.volumeInfo.title,\n          author: result.volumeInfo.authors,\n          description: result.volumeInfo.description,\n          link: result.volumeInfo.infoLink,\n          image: result.volumeInfo.imageLinks?.thumbnail,\n        };\n        return result;\n      });\n      setBooks(results);\n    });\n  };\n\n  const handleInputChange = (event) => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    setSearch(value);\n  };\n  const handleSave = (event) => {\n    event.preventDefault();\n\n    let save = books.filter((book) => book.id === event.target.id);\n    console.log(save);\n    const data = {\n      title: save[0].title,\n      author: \"save[0].author\",\n      description: save[0].description,\n      image: save[0].image,\n    };\n    console.log(data);\n    API.saveBook(data)\n      .then((res) => {\n        alert(\"book saved\");\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Container fluid>\n      <Jumbotron>\n        <h1 className=\"text-black\">\n          Find Your Favorite Books with GoogleBook API\n        </h1>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Col size=\"12\">\n            <SearchForm\n              handleFormSubmit={handleFormSubmit}\n              onChange={handleInputChange}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <Container>\n        <SearchResult books={books} handleSave={handleSave} />\n      </Container>\n    </Container>\n  );\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}